#ifndef    EX_DEBUG_HEADER
#   define EX_DEBUG_HEADER


#include "ex/string" // TODO: change to tchar or smth
#include "ex/platform"



namespace ex
{


// TODO: Log - singletone (DCLP)
// TODO: output: syslog, standart error output

// TODO: make hierarchy for posix and win
// TODO: make it singletone with DCLP
// TODO: make DCLP
struct debug
{
	// TODO: init -> chose output system, init debug engine, path to dbglib (so/dll)

	static void trace();
	// TODO: message
	// TODO: message if DEBUG defined
	// TODO: levels of debug, tegs of debug
	//      filter_tegs()
	//      filter_levels()
	// TODO: callstack(count)
	// TODO: auto dumping engine
};



#ifdef PLATFORM_IS_UNIX
#   define DEBUG_OUTPUT_FUNCTION _print
#elif defined(PLATFORM_IS_WINDOWS)

int OutputDebugStringF(const Char *format, ...);

#   define DEBUG_OUTPUT_FUNCTION OutputDebugStringF
#else
#   error Failed to detect platform!
#endif


#define DEBUG_MSG(fmt, ...) DEBUG_OUTPUT_FUNCTION(L(fmt), ##__VA_ARGS__)


//#define DEBUG_MSG_IF(A)

}

#endif